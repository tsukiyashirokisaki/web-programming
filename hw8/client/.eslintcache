[{"C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\index.js":"1","C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\Message-Query.js":"2","C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\App.js":"3","C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\Login.js":"4"},{"size":1057,"mtime":1609735492924,"results":"5","hashOfConfig":"6"},{"size":1014,"mtime":1609747575510,"results":"7","hashOfConfig":"6"},{"size":4609,"mtime":1609768782861,"results":"8","hashOfConfig":"6"},{"size":1589,"mtime":1609735708202,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"ralt0z",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\index.js",["20"],"import { ApolloProvider,ApolloClient,InMemoryCache, Reference} from '@apollo/client';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\nimport 'antd/dist/antd.css'\r\n\r\n\r\n\r\nimport { split, HttpLink } from '@apollo/client';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nconst httpLink = new HttpLink({\r\n  uri: 'http://localhost:4000/'\r\n});\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://localhost:4000/`,\r\n  options: {\r\n    reconnect: true,\r\n    timeout: 30000\r\n  }\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    );\r\n  },\r\n  wsLink,\r\n  httpLink,\r\n);\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: splitLink\r\n});\r\n\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById('root'),\r\n);\r\n","C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\Message-Query.js",[],"C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\App.js",["21","22","23","24","25","26"],"C:\\Users\\stanley\\Desktop\\github\\hw8-tsukiyashirokisaki\\own\\client\\src\\Login.js",["27","28","29","30","31","32","33","34","35","36","37","38","39","40"],"import './App.css'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, Input, message, Result, Tag } from 'antd'\r\nimport {MessagesQuery,CreateMessageMutation,ClearMessageMutation,NewMessageSubscription} from './Message-Query'\r\nimport {gql, useQuery, useMutation,useSubscription} from '@apollo/client'\r\nimport App from './App'\r\n\r\nfunction Login() {\r\n    const bodyRef = useRef(null)\r\n    const [username, setUsername] = useState('')\r\n  \r\n    const displayStatus = (s) => {\r\n        if (s.msg) {\r\n          const { type, msg } = s\r\n          const content = {\r\n            content: msg,\r\n            duration: 0.5\r\n          }\r\n          switch (type) {\r\n            case 'success':\r\n              message.success(content)\r\n              break\r\n            case 'info':\r\n              message.info(content)\r\n              break\r\n            case 'danger':\r\n            default:\r\n              message.error(content)\r\n              break\r\n          }\r\n        }\r\n      }\r\n    return  username===''?<div className=\"App\">\r\n    <Input.Search\r\n    rows={4}\r\n    value={username}\r\n    ref={bodyRef}\r\n    enterButton=\"Send\"\r\n    onChange={(e) => setUsername(e.target.value)}\r\n    placeholder=\"Type a username here...\"\r\n    onSearch={(msg) => {\r\n      if (!msg ) {\r\n        displayStatus({\r\n          type: 'error',\r\n          msg: 'Please enter a username.'\r\n        })\r\n        return\r\n      }\r\n    //   createMessage({variables:{ name: username, body: msg}})\r\n      \r\n      setUsername('')\r\n    }}\r\n  ></Input.Search>\r\n  </div>:<h1>as</h1>\r\n    \r\n}\r\nexport default Login",{"ruleId":"41","severity":1,"message":"42","line":1,"column":53,"nodeType":"43","messageId":"44","endLine":1,"endColumn":62},{"ruleId":"41","severity":1,"message":"45","line":3,"column":34,"nodeType":"43","messageId":"44","endLine":3,"endColumn":40},{"ruleId":"41","severity":1,"message":"46","line":5,"column":9,"nodeType":"43","messageId":"44","endLine":5,"endColumn":12},{"ruleId":"41","severity":1,"message":"47","line":5,"column":36,"nodeType":"43","messageId":"44","endLine":5,"endColumn":51},{"ruleId":"41","severity":1,"message":"48","line":9,"column":18,"nodeType":"43","messageId":"44","endLine":9,"endColumn":27},{"ruleId":"41","severity":1,"message":"49","line":46,"column":27,"nodeType":"43","messageId":"44","endLine":46,"endColumn":28},{"ruleId":"50","severity":1,"message":"51","line":49,"column":5,"nodeType":"52","endLine":49,"endColumn":11,"suggestions":"53"},{"ruleId":"41","severity":1,"message":"54","line":2,"column":17,"nodeType":"43","messageId":"44","endLine":2,"endColumn":26},{"ruleId":"41","severity":1,"message":"55","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":16},{"ruleId":"41","severity":1,"message":"45","line":3,"column":34,"nodeType":"43","messageId":"44","endLine":3,"endColumn":40},{"ruleId":"41","severity":1,"message":"56","line":3,"column":42,"nodeType":"43","messageId":"44","endLine":3,"endColumn":45},{"ruleId":"41","severity":1,"message":"57","line":4,"column":9,"nodeType":"43","messageId":"44","endLine":4,"endColumn":22},{"ruleId":"41","severity":1,"message":"58","line":4,"column":23,"nodeType":"43","messageId":"44","endLine":4,"endColumn":44},{"ruleId":"41","severity":1,"message":"59","line":4,"column":45,"nodeType":"43","messageId":"44","endLine":4,"endColumn":65},{"ruleId":"41","severity":1,"message":"60","line":4,"column":66,"nodeType":"43","messageId":"44","endLine":4,"endColumn":88},{"ruleId":"41","severity":1,"message":"46","line":5,"column":9,"nodeType":"43","messageId":"44","endLine":5,"endColumn":12},{"ruleId":"41","severity":1,"message":"61","line":5,"column":14,"nodeType":"43","messageId":"44","endLine":5,"endColumn":22},{"ruleId":"41","severity":1,"message":"62","line":5,"column":24,"nodeType":"43","messageId":"44","endLine":5,"endColumn":35},{"ruleId":"41","severity":1,"message":"47","line":5,"column":36,"nodeType":"43","messageId":"44","endLine":5,"endColumn":51},{"ruleId":"41","severity":1,"message":"63","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":11},{"ruleId":"64","severity":1,"message":"65","line":54,"column":10,"nodeType":"66","endLine":54,"endColumn":14},"no-unused-vars","'Reference' is defined but never used.","Identifier","unusedVar","'Result' is defined but never used.","'gql' is defined but never used.","'useSubscription' is defined but never used.","'setStatus' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'Tag' is defined but never used.","'MessagesQuery' is defined but never used.","'CreateMessageMutation' is defined but never used.","'ClearMessageMutation' is defined but never used.","'NewMessageSubscription' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'App' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",{"desc":"68","fix":"69"},"Update the dependencies array to be: [refetch, skip]",{"range":"70","text":"71"},[1613,1619],"[refetch, skip]"]